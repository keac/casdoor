name: release
on: [push, pull_request]

jobs:
  release:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        go-version: [ 1.21.3 ]
    name: Build
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2


      - name: Build linux
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o server_linux_amd64 .


      - name: Build windows
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o server_linux_amd64 .

      - uses: actions/upload-artifact@v4
        with:
          name: server
          path: ./server_linux_amd64

  frontend:
    name: Front-end
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: ./web/yarn.lock
      - run: yarn install && CI=false yarn run build
        working-directory: ./web

      - run: tar -czvf web.tar.gz ./web/build
      
      - uses: actions/upload-artifact@v4
        with:
          name: web.tar.gz
          path: ./web.tar.gz
